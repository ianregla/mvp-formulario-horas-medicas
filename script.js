const chatContainer = document.getElementById("chat-container");
const inputForm = document.getElementById("input-form");
const userInput = document.getElementById("user-input");
const datePicker = document.getElementById("date-picker");

let step = 0;
let formData = {};
let esperandoConfirmacion = false;

const preguntas = [
  { tipo: "texto", mensaje: "¬°Hola! üòä ¬øCu√°l es tu nombre?", campo: "nombre" },
  { tipo: "texto", mensaje: "Perfecto, te pedir√© algunos datos para poder encontrar la mejor opci√≥n de agenda para ti. ¬øCu√°l es tu RUT?", campo: "rut", validar: validarRUT },
  { tipo: "texto", mensaje: "¬øCu√°l es tu correo electr√≥nico?", campo: "correo", validar: validarEmail },
  {
    tipo: "opciones",
    mensaje: "¬øCu√°l es tu previsi√≥n?",
    opciones: ["Isapre", "Fonasa", "Particular"],
    campo: "prevision"
  },
  {
    tipo: "opciones",
    mensaje: "Todos estos datos, son los exigidos por las cl√≠nicas para agendar üòâ‚Äã. ¬øCu√°l es tu Isapre?",
    opciones: ["Banm√©dica", "Cruz Blanca", "Consalud", "Colmena", "Nueva M√°s Vida", "Vida Tres", "Esencial"],
    campo: "isapre",
    condicion: (datos) => datos.prevision === "Isapre"
  },
  {
    tipo: "checkbox",
    mensaje: "¬øEn qu√© cl√≠nicas te gustar√≠a atenderte? (Puedes elegir hasta 3)",
    opciones: [
      "Cl√≠nica Alemana",
      "Cl√≠nica Las Condes",
      "Cl√≠nica UC San Carlos",
      "Cl√≠nica UC Christus",
      "Cl√≠nica MEDS",
      "Cl√≠nica Santa Mar√≠a",
      "Cl√≠nica Indisa Providencia",
      "Cl√≠nica Indisa Maip√∫",
      "Cl√≠nica Redsalud Providencia",
      "Cl√≠nica Redsalud Vitacura",
      "Cl√≠nica D√°vila Recoleta",
      "Cl√≠nica D√°vila Vespucio",
      "Cl√≠nica Bupa",
      "Otra",
    ],
    campo: "clinicas"
  },
  {
    tipo: "opciones",
    mensaje: "¬øQu√© especialidad est√°s buscando?",
    opciones: [
      "Medicina general",
      "Ginecolog√≠a",
      "Pediatr√≠a",
      "Traumatolog√≠a",
      "Oftalmolog√≠a",
      "Psiquiatr√≠a",
      "Cardiolog√≠a",
      "Dermatolog√≠a",
      "Gastroenterolog√≠a",
      "Endocrinolog√≠a",
      "Neurolog√≠a",
      "Reumatolog√≠a",
      "Urolog√≠a",
      "Otorrinolaringolog√≠a"
    ],
    campo: "especialidad"
  },
  {
    tipo: "opciones",
    mensaje: "¬øTienes un m√©dico en mente? üë®üèª‚Äç‚öïÔ∏è‚Äã",
    opciones: ["S√≠", "No"],
    campo: "tieneMedico"
  },
  {
    tipo: "texto",
    mensaje: "Escribe el nombre del m√©dico",
    campo: "medico",
    condicion: (datos) => datos.tieneMedico === "S√≠"
  },
  {
    tipo: "opciones",
    mensaje: "¬øPrefieres la hora lo antes posible o en una fecha espec√≠fica? üïù‚Äã",
    opciones: ["Lo antes posible", "Fecha espec√≠fica"],
    campo: "preferenciaHora"
  },
  {
    tipo: "fecha",
    mensaje: "Selecciona la fecha que prefieras (si haces click en el calendario se despliega uno):",
    campo: "fecha",
    condicion: (datos) => datos.preferenciaHora === "Fecha espec√≠fica"
  },
  {
    tipo: "opciones",
    mensaje: "¬øPrefieres horario ma√±ana o tarde?",
    opciones: ["Ma√±ana", "Tarde"],
    campo: "horario",
    condicion: (datos) => datos.preferenciaHora === "Fecha espec√≠fica"
  }
];

function agregarMensaje(texto, clase) {
  const msg = document.createElement("div");
  msg.className = `message ${clase}`;
  msg.innerHTML = texto.replace(/\n/g, "<br>"); // Usamos <br> para que los saltos de l√≠nea funcionen visualmente
  chatContainer.appendChild(msg);
  chatContainer.scrollTop = chatContainer.scrollHeight;
}

function mostrarPregunta() {
  const pregunta = preguntas[step];
  if (!pregunta) return;

  if (pregunta.condicion && !pregunta.condicion(formData)) {
    step++;
    mostrarPregunta();
    return;
  }

  let texto = pregunta.mensaje;

  userInput.style.display = "none";
  datePicker.style.display = "none";

  if (pregunta.tipo === "texto" || pregunta.tipo === "opciones") {
    if (pregunta.tipo === "opciones") {
      texto += "<br>" + pregunta.opciones.map((op, i) => `${i + 1}) ${op}`).join("<br>");
    }
    agregarMensaje(texto, "bot");
    userInput.value = "";
    userInput.style.display = "block";
    userInput.focus();
  } else if (pregunta.tipo === "fecha") {
    agregarMensaje(texto, "bot");
    datePicker.value = "";
    datePicker.style.display = "block";
  } else if (pregunta.tipo === "checkbox") {
    agregarMensaje(texto, "bot");
    const opcionesHtml = pregunta.opciones.map((op, i) => {
      return `<label><input type="checkbox" name="clinica" value="${op}"> ${op}</label>`;
    }).join("<br>");
    const wrapper = document.createElement("div");
    wrapper.className = "message bot";
    wrapper.innerHTML = opcionesHtml;
    chatContainer.appendChild(wrapper);
    chatContainer.scrollTop = chatContainer.scrollHeight;
  }
}

inputForm.addEventListener("submit", function (e) {
  e.preventDefault();
  const pregunta = preguntas[step];
  let respuesta = "";

  if (esperandoConfirmacion) {
    const valor = userInput.value.trim();
    if (valor !== "1" && valor !== "2") {
      agregarMensaje("Por favor responde con 1) S√≠ o 2) No.", "bot");
      return;
    }
    agregarMensaje(valor === "1" ? "S√≠" : "No", "user");
    agregarMensaje("¬°Gracias por confiar en nosotros! üíô. Pronto nos contactaremos por correo para darte informaci√≥n de tu solicitud.", "bot");
    inputForm.style.display = "none";
    return;
  }

  if (pregunta.tipo === "fecha") {
    if (!datePicker.value) return;
    const partes = datePicker.value.split("-");
    if (partes.length !== 3) return;
    const fechaFormateada = `${partes[2]}/${partes[1]}/${partes[0]}`;
    respuesta = fechaFormateada;
    formData[pregunta.campo] = fechaFormateada;
  } else if (pregunta.tipo === "checkbox") {
    const seleccionados = Array.from(document.querySelectorAll('input[name="clinica"]:checked')).map(input => input.value);
    if (seleccionados.length === 0 || seleccionados.length > 3) {
      agregarMensaje("Selecciona entre 1 y 3 cl√≠nicas, por favor.", "bot");
      return;
    }
    respuesta = seleccionados;
  } else {
    respuesta = userInput.value.trim();
    if (!respuesta) return;
  }

  if (pregunta.tipo === "opciones") {
    const index = parseInt(respuesta);
    if (isNaN(index) || index < 1 || index > pregunta.opciones.length) {
      agregarMensaje("Por favor responde con el n√∫mero correspondiente a una opci√≥n v√°lida.", "bot");
      return;
    }
    respuesta = pregunta.opciones[index - 1];
  }

  if (pregunta.validar && !pregunta.validar(respuesta)) {
    agregarMensaje("El formato que ingresaste no es v√°lido. Intenta nuevamente.", "bot");
    return;
  }

  if (pregunta.tipo === "checkbox") {
    agregarMensaje(respuesta.join(", "), "user");
  } else {
    agregarMensaje(respuesta, "user");
  }

  if (pregunta.campo && pregunta.tipo !== "fecha") {
    formData[pregunta.campo] = respuesta;
  }

  if (pregunta.campo === "preferenciaHora" && respuesta === "Lo antes posible") {
    userInput.value = "";
    agregarMensaje("¬øQuieres que agendemos por ti?<br>1) S√≠<br>2) No", "bot");
    esperandoConfirmacion = true;
    return;
  }

  if (pregunta.campo === "horario") {
    userInput.value = "";
    agregarMensaje("¬øQuieres que agendemos por ti?<br>1) S√≠<br>2) No", "bot");
    esperandoConfirmacion = true;
    return;
  }

  step++;
  mostrarPregunta();
});

mostrarPregunta();

function validarEmail(email) {
  return /^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(email);
}

function validarRUT(rut) {
  rut = rut.replace(/\./g, '').replace('-', '');
  if (rut.length < 8 || rut.length > 9) return false;
  let cuerpo = rut.slice(0, -1);
  let dv = rut.slice(-1).toUpperCase();
  let suma = 0;
  let multiplo = 2;
  for (let i = cuerpo.length - 1; i >= 0; i--) {
    suma += parseInt(cuerpo.charAt(i)) * multiplo;
    multiplo = multiplo < 7 ? multiplo + 1 : 2;
  }
  let dvEsperado = 11 - (suma % 11);
  dvEsperado = dvEsperado === 11 ? '0' : dvEsperado === 10 ? 'K' : dvEsperado.toString();
  return dv === dvEsperado;
}



